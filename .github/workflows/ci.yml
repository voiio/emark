name: CI

on:
  push:
    branches:
      - main
  pull_request:

jobs:

  dist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: sudo apt install -y gettext
      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"
      - run: python -m pip install --upgrade pip build wheel twine
      - run: python -m build --sdist --wheel
      - run: python -m twine check dist/*
      - uses: actions/upload-artifact@v4
        with:
          path: dist/*

  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        lint-command:
          - black --check --diff .
          - ruff check --output-format=github .
          - djlint emark --reformat
    steps:
      - uses: actions/checkout@v4
      - run: sudo apt install -y gettext
      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"
          cache: 'pip'
          cache-dependency-path: 'pyproject.toml'
      - run: python -m pip install -e .[lint]
      - run: ${{ matrix.lint-command }}

  pytest:
    needs:
      - lint
    strategy:
      matrix:
        os:
          - "ubuntu-latest"
        python-version:
          - "3.10"
          - "3.11"
          - "3.12"
        django-version:
          - "4.2"  # LTS
          - "5.0"
        extras:
          - "test"

    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
    - run: sudo apt install -y gettext
    - uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - run: python -m pip install .[${{ matrix.extras }}]
    - run: python -m pip install django~=${{ matrix.django-version }}.0
    - run: python -m pytest
    - uses: codecov/codecov-action@v4
