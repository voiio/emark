[build-system]
requires = ["flit-gettext", "flit_scm", "wheel"]
build-backend = "flit_gettext.scm"

[project]
name = "emark"
authors = [
  { name = "Rust Saiargaliev", email = "fly.amureki@gmail.com" },
  { name = "Johannes Maron", email = "johannes@maron.family" },
  { name = "Mostafa Mohamed", email = "mostafa.anm91@gmail.com" },
  { name = "Jacqueline Kraus", email = "jacquelinekraus1992@gmail.com" },
]
readme = "README.md"
license = { file = "LICENSE" }
keywords = ["Markdown", "Django", "email", "templates", "HTML"]
dynamic = ["version", "description"]
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Programming Language :: Python",
  "Environment :: Web Environment",
  "License :: OSI Approved :: BSD License",
  "Intended Audience :: Developers",
  "Operating System :: OS Independent",
  "Topic :: Communications :: Email",
  "Topic :: Text Processing :: Markup :: Markdown",
  "Topic :: Text Processing :: Markup :: HTML",
  "Topic :: Software Development",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Framework :: Django",
  "Framework :: Django :: 4.2",
  "Framework :: Django :: 5.0",
]
requires-python = ">=3.10"
dependencies = ["django", "markdown", "premailer"]

[project.optional-dependencies]
test = [
  "pytest",
  "pytest-cov",
  "pytest-django",
  "model_bakery",
]
lint = [
  "black==24.8.0",
  "pre-commit==4.0.0",
  "ruff==0.6.9",
  "djlint==1.35.2",
]

[project.urls]
Project-URL = "https://github.com/voiio/emark"
Changelog = "https://github.com/voiio/emark/releases"

[tool.flit.module]
name = "emark"

[tool.setuptools_scm]
write_to = "emark/_version.py"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "--cov --tb=short -rxs"
testpaths = ["tests"]
DJANGO_SETTINGS_MODULE = "tests.testapp.settings"

[tool.coverage.run]
source = ["emark"]
omit = ["emark/buildapi.py"]

[tool.coverage.report]
show_missing = true

[tool.ruff]
src = ["emark", "tests"]

[tool.ruff.lint]
select = [
    "E", # pycodestyle errors
    "W", # pycodestyle warnings
    "F", # pyflakes
    "I", # isort
    "S", # flake8-bandit
    "D", # pydocstyle
    "UP", # pyupgrade
    "B", # flake8-bugbear
    "C", # flake8-comprehensions
]

ignore = ["B904", "D1", "E501", "S101"]

[tool.ruff.lint.isort]
combine-as-imports = true
split-on-trailing-comma = true
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"]
force-wrap-aliases = true

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.djlint]
profile="django"
indent=2
max_line_length=120
exclude=".direnv,.venv,venv"
